steps:
# Pull most recent Docker image.
- id: 'pull-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['pull', '${_DOCKER_IMAGE}']
  waitFor: ['-']

# Build the new Docker image (caching from the pre-built one)
- id: 'build-image'
  waitFor: ['pull-image']
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--network=cloudbuild',
    '--cache-from=${_DOCKER_IMAGE}',
    '--tag=${_DOCKER_IMAGE}',
    '.',
  ]

# Push updated Docker image to Container Registry.
- id: 'push-image'
  waitFor: ['build-image']
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    '${_DOCKER_IMAGE}',
  ]

# Run presubmit tests.
- id: 'build-pcl'
  waitFor: ['build-image']
  name: '${_DOCKER_IMAGE}'
  entrypoint: 'bash'
  args: ['bazel build ...']
  env:
    - 'REPO_NAME=${REPO_NAME}'
    - 'COMMIT_SHA=${COMMIT_SHA}'

# Run presubmit tests.
- id: 'testi-pcl'
  waitFor: ['build-pcl']
  name: '${_DOCKER_IMAGE}'
  entrypoint: 'bash'
  args: ['bazel build ...']
  env:
    - 'REPO_NAME=${REPO_NAME}'
    - 'COMMIT_SHA=${COMMIT_SHA}'

timeout: 3600s # 60 mins, just in case.

substitutions:
  _DOCKER_IMAGE: us-central1-docker.pkg.dev/private-compute-libraries-ci/docker-images/pcl-image:latest

options:
  machineType: 'E2_HIGHCPU_32'

